# Triggers after the Build has finished,
# because artifacts are not externally available
# until the end of their workflow.
name: Deploy develop.element.io
on:
  workflow_run:
    workflows: [ "Build" ]
    types:
      - completed
jobs:
  deploy:
    runs-on: ubuntu-latest
    if: github.event.workflow_run.conclusion == 'success' && github.event.workflow_run.event == 'pull_request'
    steps:
      - name: Find Artifact ID
        uses: actions/github-script@v3.1.0
        id: find_artifact
        with:
          result-encoding: string
          script: |
            const owner = context.repo.owner;
            const repo = context.repo.repo;
            const artifacts = await github.actions.listWorkflowRunArtifacts({
                owner,
                repo,
                run_id: ${{ github.event.workflow_run.id }},
            });
            const matchArtifact = artifacts.data.artifacts.filter((artifact) => {
                return artifact.name == "previewbuild"
            })[0];

            const result = await github.request({
                ...github.actions.downloadArtifact.endpoint({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    artifact_id: matchArtifact.id,
                    archive_format: 'zip',
                }),
                headers: {
                    authorization: "Bearer ${{ secrets.GITHUB_TOKEN }}",
                },
                // We don't need to download the artifact here, only follow redirects
                method: "HEAD",
            });
            return result.url;

      - name: Create Deployment
        uses: bobheadxi/deployments@v1
        id: deployment
        with:
          step: start
          token: ${{ secrets.GITHUB_TOKEN }}
          env: Develop
          ref: ${{ github.head_ref }}

      # TODO update things
      - name: Notify the redeploy script
        uses: distributhor/workflow-webhook@v2
        env:
          GITHUB_EVENT_NAME: "io.element.deploy_develop"
          webhook_url: https://test.tun.bit.ovh/
          webhook_secret: FooBar
          data: '{"url": "${{ steps.find_artifact.outputs.result }}"}'

      - name: Update deployment status
        uses: bobheadxi/deployments@v1
        if: always()
        with:
          step: finish
          token: ${{ secrets.GITHUB_TOKEN }}
          status: ${{ job.status }}
          env: ${{ steps.deployment.outputs.env }}
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}
          env_url: https://develop.element.io
